#=================================================
# Description: MiRouter 4A Gigabit Openwrt Autobuild
# Lisence: MIT
# Author: tjuyy
#=================================================
# MiRouter-4A-openclash.yml
name: MiRouter 4A Gigabit - Full

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - "4A-openclash.diffconfig"
  #  schedule:
  #    - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo "Deleting files, please wait ..."
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
          sudo swapoff /swapfile
          sudo rm -f /swapfile
          #docker rmi `docker images -q`
          #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Clone source code
        env:
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: add custom source
        run: |
          cd openwrt
          sed -i '/helloworld/s/^#//g' feeds.conf.default
          mkdir package/luci-app-openclash
          cd package/luci-app-openclash
          git init
          git remote add -f origin https://github.com/vernesong/OpenClash.git
          git config core.sparsecheckout true
          echo "luci-app-openclash" >> .git/info/sparse-checkout
          git pull origin master
          git branch --set-upstream-to=origin/master master

      - name: Update & install feeds
        run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: Load custom configuration
        env:
          CONFIG_FILE: "4A-openclash.diffconfig"
          DIY_SH: "diy.sh"
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          cd openwrt
          ../$DIY_SH
          make defconfig

      # - name: SSH connection to Actions
      #   uses: P3TERX/debugger-action@master

      - name: Download package
        run: |
          cd openwrt && make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Multi-thread compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc)

      - name: Single-thread compile
        if: failure()
        run: |
          cd openwrt
          make -j1 V=s

      - name: Upload bin directory
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: OpenWrt_bin
          path: openwrt/bin

      - name: Remove packages
        if: always()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "::set-env name=FIRMWARE::$(pwd)"

      - name: Upload firmware to Artifact
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: OpenWrt-Firmware
          path: ${{ env.FIRMWARE }}
